/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.6/userguide/building_java_projects.html
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'idea'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // This dependency is used by the application.
    implementation 'com.rabbitmq:amqp-client:5.13.0'

    implementation "com.rabbitmq:stream-client:0.16.0"

    implementation 'com.google.guava:guava:31.1-jre'
}

testing {
    suites {
        // Configure the built-in test suite
        test {
            // Use JUnit4 test framework
            useJUnit('4.13.2')
        }
    }
}

tasks.register('Demo.HelloWorld.runSender', JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'rabbitmq_proj_sem.sender_receiver.Sender'
}

tasks.register('Demo.HelloWorld.runReceiver', JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'rabbitmq_proj_sem.sender_receiver.Receiver'
}

tasks.register('Demo.WorkQueue.runSender', JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'rabbitmq_proj_sem.work_queue.Sender'
}

tasks.register('Demo.WorkQueue.runReceiver', JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'rabbitmq_proj_sem.work_queue.Receiver'
}

tasks.register('Demo.PubSub.runSender', JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'rabbitmq_proj_sem.pub_sub_model.EmitLog'
}

tasks.register('Demo.PubSub.runReceiver', JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'rabbitmq_proj_sem.pub_sub_model.ReceiveLogs'
}

tasks.register('Demo.Routing.runSender', JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'rabbitmq_proj_sem.routing.EmitLogDirect'
}

tasks.register('Demo.Routing.runReceiver', JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'rabbitmq_proj_sem.routing.ReceiveLogsDirect'
}

tasks.register('Demo.Topic.runSender', JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'rabbitmq_proj_sem.topic.EmitLogTopic'
}

tasks.register('Demo.Topic.runReceiver', JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'rabbitmq_proj_sem.topic.ReceiveLogsTopic'
}

tasks.register('Demo.RPC.runServer', JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'rabbitmq_proj_sem.rpc.RPCServer'
}
tasks.register('Demo.RPC.runClient', JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'rabbitmq_proj_sem.rpc.RPCClient'
}

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java']
        }
        resources {
            srcDirs = ['src/main/resources']
        }
    }
}

application {
    // Define the main class for the application.
    mainClass = 'rabbitmq_proj_sem.App'
}
